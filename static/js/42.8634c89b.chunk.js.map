{"version":3,"file":"static/js/42.8634c89b.chunk.js","mappings":"kMAGaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGvB,C,uJCdD,EAA+B,uCAA/B,EAAkF,oC,SC8ElF,EAzEyB,WAAO,IAAD,QACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBP,GAAW,GADU,mBAGOQ,EAAAA,EAAAA,IAAgBd,GAHvB,OAGbe,EAHa,OAInBX,EAAaW,GAJM,gDAMnBC,QAAQC,IAAR,MANmB,yBAQnBX,GAAW,GARQ,4EAAH,qDAWpBO,GACD,GAAE,CAACb,KAGF,iCACE,SAAC,KAAD,CAAMkB,GAAIT,EAAV,UACE,mBAAQU,KAAK,SAAb,uBAIDd,IAAW,SAACb,EAAA,EAAD,IACXW,IACC,iBAAKiB,UAAWC,EAAhB,WACE,gBACE3B,MAAM,QACN4B,IAAK,kCAAoCnB,EAAUoB,YACnDC,IAAKrB,EAAUsB,kBAEjB,4BACE,0BACGtB,EAAUuB,MADb,KACsBvB,EAAUwB,aAAaC,MAAM,EAAG,GADtD,QAGA,wCAAgBzB,EAAU0B,eAC1B,sCACA,uBAAI1B,EAAU2B,YACd,oCACA,eAAIV,UAAWC,EAAf,SACGlB,EAAU4B,OAAOC,KAAI,SAAAC,GAAK,OACzB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADU,aAOnC,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMjB,GAAI,OAAQR,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAjD,qBAEF,yBACE,SAAC,KAAD,CAAMO,GAAI,UAAWR,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAApD,2BAGJ,mBACA,SAAC,KAAD,SAIP,C,+LC3EKyB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,+BACKD,EADL,4DACgEO,IAFxD,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOf3B,EAAe,mCAAG,WAAMd,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACVrC,EADU,oBACSoC,EADT,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOfI,EAAe,mCAAG,WAAM5C,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACVrC,EADU,4BACiBoC,EADjB,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKK,MAJU,2CAAH,sDAOfC,EAAe,mCAAG,WAAM9C,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACVrC,EADU,4BACiBoC,EADjB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return(\n        <Audio\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"green\"\n            ariaLabel=\"loading\"\n            wrapperStyle\n            wrapperClass\n        />\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetalis\":\"MovieDetailsPage_movieDetalis__QesEx\",\"genreList\":\"MovieDetailsPage_genreList__HKRpT\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport {getMovieDetails} from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n \n\n  const backLinkHref = location.state?.from ?? \"/\";\n\n  useEffect(() => {\n    const onDetalisMovie = async () => {\n      setLoading(true);\n      try {\n        const detalyMovie = await getMovieDetails(movieId);\n        setMovieInfo(detalyMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onDetalisMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <button type=\"button\" >\n            Go back\n        </button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <div className={s.movieDetalis}>\n          <img\n            width=\"300px\"\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n          />\n          <div>\n            <h1>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {movieInfo.popularity}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul className={s.genreList}>\n              {movieInfo.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'} state={{ from: location.state?.from }}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'} state={{ from: location.state?.from }}>Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;","import axios from \"axios\";\n\nconst API_KEY = 'd88f0de56ca3b9f50c6b6c569b5a8f7a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \nexport const getSearchMovies = async keyword => {\nconst response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n);\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n);\nreturn response.data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","backLinkHref","state","from","useEffect","onDetalisMovie","getMovieDetails","detalyMovie","console","log","to","type","className","s","src","poster_path","alt","original_title","title","release_date","slice","popularity","overview","genres","map","genre","name","id","API_KEY","axios","getTrending","response","data","results","getSearchMovies","keyword","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}