{"version":3,"file":"static/js/667.44219197.chunk.js","mappings":"mMAGaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGvB,C,uFCbYC,E,OAAaC,GAAAA,GAAH,6L,SCsCvB,EApCyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,GACCA,EAAMG,KAAI,SAAAC,GAAI,OACZ,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACA,gBACQQ,IACEL,EAAKM,YACD,kCAAoCN,EAAKM,YACzC,sCAENC,IAAI,cACJnB,MAAM,MACND,OAAO,SAEb,uBAAIa,EAAKQ,YAZJR,EAAKE,GADF,KAmBrB,C,2HC2BD,UAlDmB,WAAO,IAAD,EACrB,GAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAwBhD,OAjBAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAY,CACd,IAAMG,EAAa,mCAAG,2FACpBP,GAAW,GADS,mBAGQQ,EAAAA,EAAAA,IAAgBJ,GAHxB,OAGZK,EAHY,OAIlBX,EAAeW,GAJG,gDAMlBC,QAAQC,IAAR,MANkB,yBAQlBX,GAAW,GARO,4EAAH,qDAWnBO,GACD,CACJ,GAAE,CAACH,KAGJ,6BACI,kBAAMQ,SAxBW,SAAAC,GACjBA,EAAMC,iBACNX,EAAgB,CAAEY,MAAOF,EAAMG,OAAOC,SAASF,MAAMG,MAAMC,eAC9D,EAqBG,WACA,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,KACzC,mBAAQF,KAAK,SAAb,uBAECrB,IAAW,SAAC,IAAD,IACXF,IAAe,SAAC,IAAD,CAAkBd,MAAOc,IACxCA,GACsB,IAAvBA,EAAY0B,SACXnB,GACC,2CAEA,sDAMT,C,+LCnDKoB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXrB,EAAe,mCAAG,WAAMsB,GAAN,uFACRL,EAAAA,EAAAA,IAAA,+BACKD,EADL,4DACgEM,IAFxD,cACzBH,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOfE,EAAe,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,oBACSR,EADT,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACiBR,EADjB,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOfC,EAAe,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACiBR,EADjB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/MoviesSearchList/MovieSearchList.styled.js","components/MoviesSearchList/MoviesSearchList.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return(\n        <Audio\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"green\"\n            ariaLabel=\"loading\"\n            wrapperStyle\n            wrapperClass\n        />\n    )\n}\n","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr); \ngrid-template-rows: repeat(4, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px; \nlist-style: none;\n  \n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {MoviesList} from './MovieSearchList.styled'\n\nconst MoviesSearchList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img\n                    src={\n                      film.poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + film.poster_path\n                        : 'https://via.placeholder.com/960x240'\n                    }\n                    alt=\"About movie\"\n                    width=\"250\"\n                    height=\"400\"\n                  />\n              <p>{film.title}</p>\n            </Link>\n          </li>\n        ))}\n    </MoviesList>\n  );\n};\n\nMoviesSearchList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesSearchList;","import { useState, useEffect } from \"react\";\nimport {getSearchMovies} from 'services/api';\nimport MoviesSearchList from \"components/MoviesSearchList/MoviesSearchList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryMovie = searchParams.get('query') ?? '';\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n    };\n\n    useEffect(() => {\n        if (queryMovie) {\n          const onSearchMovie = async () => {\n            setLoading(true);\n            try {\n              const searchMovie = await getSearchMovies(queryMovie);\n              setSearchFilms(searchMovie);\n            } catch (error) {\n              console.log(error);\n            } finally {\n              setLoading(false);\n            }\n          };\n          onSearchMovie();\n        }\n    }, [queryMovie]);\n    \n    return (\n    <main>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" autoFocus />\n        <button type=\"submit\">Search</button>\n        </form>\n        {loading && <Loader />}\n        {searchFilms && <MoviesSearchList films={searchFilms}/>}\n        {searchFilms &&\n        searchFilms.length === 0 &&\n        (queryMovie ? (\n          <p>Nothing found!</p>\n        ) : (\n          <p>Please, enter request !</p>\n        ))}\n       \n    </main>\n    );\n    \n};\n\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\nconst API_KEY = 'd88f0de56ca3b9f50c6b6c569b5a8f7a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \nexport const getSearchMovies = async keyword => {\nconst response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n);\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n);\nreturn response.data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","MoviesList","styled","films","location","useLocation","map","film","to","id","state","from","src","poster_path","alt","title","useState","searchFilms","setSearchFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryMovie","get","useEffect","onSearchMovie","getSearchMovies","searchMovie","console","log","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","type","name","autoFocus","length","API_KEY","axios","getTrending","response","data","results","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}