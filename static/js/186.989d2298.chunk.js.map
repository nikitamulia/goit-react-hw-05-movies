{"version":3,"file":"static/js/186.989d2298.chunk.js","mappings":"mMAGaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGvB,C,kHCgCD,UA1CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAW,GADW,mBAGEG,EAAAA,EAAAA,IAAgBT,GAHlB,OAGdG,EAHc,OAIpBC,EAAWD,GAJS,gDAMpBO,QAAQC,IAAR,MANoB,yBAQpBL,GAAW,GARS,4EAAH,qDAWrBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQS,SACP,0BACE,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBd,EAAQS,SACP,wEAIP,C,+LC3CKM,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,+BACKD,EADL,4DACgEO,IAFxD,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOfG,EAAe,mCAAG,WAAM1B,GAAN,uFACRmB,EAAAA,EAAAA,IAAA,gBACVnB,EADU,oBACSkB,EADT,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOfK,EAAe,mCAAG,WAAM3B,GAAN,uFACRmB,EAAAA,EAAAA,IAAA,gBACVnB,EADU,4BACiBkB,EADjB,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOfnB,EAAe,mCAAG,WAAMT,GAAN,uFACRmB,EAAAA,EAAAA,IAAA,gBACVnB,EADU,4BACiBkB,EADjB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return(\n        <Audio\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"green\"\n            ariaLabel=\"loading\"\n            wrapperStyle\n            wrapperClass\n        />\n    )\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {getMovieReviews} from 'services/api';\nimport {Loader} from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = 'd88f0de56ca3b9f50c6b6c569b5a8f7a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \nexport const getSearchMovies = async keyword => {\nconst response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n);\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n);\nreturn response.data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","onActorsOfMovie","getMovieReviews","console","log","length","map","review","author","content","id","API_KEY","axios","getTrending","response","data","results","getSearchMovies","keyword","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}