{"version":3,"file":"static/js/680.d2596380.chunk.js","mappings":"mMAGaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGvB,C,uFCbYC,E,OAAaC,GAAAA,GAAH,6L,SCsCvB,EApCyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,GACCA,EAAMG,KAAI,SAAAC,GAAI,OACZ,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACA,gBACQQ,IACEL,EAAKM,YACD,kCAAoCN,EAAKM,YACzC,sCAENC,IAAI,cACJnB,MAAM,MACND,OAAO,SAEb,uBAAIa,EAAKQ,YAZJR,EAAKE,GADF,KAmBrB,C,kHCGD,UA3BiB,WACb,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,mCAAG,2FACzBF,GAAW,GADc,mBAGKG,EAAAA,EAAAA,MAHL,OAGjBC,EAHiB,OAIvBN,EAASM,GAJc,gDAMvBC,QAAQC,IAAR,MANuB,yBAQvBN,GAAW,GARY,4EAAH,qDAWxBE,GACD,GAAE,KAGL,6BACI,2CACClB,IAAS,SAAC,IAAD,CAAkBA,MAAOA,IAClCe,IAAW,SAAC,IAAD,MAGnB,C,+LC7BKQ,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAML,EAAW,mCAAG,oGACAK,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,+BACKD,EADL,4DACgEM,IAFxD,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,oBACSR,EADT,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOfM,EAAe,mCAAG,WAAMD,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACiBR,EADjB,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKO,MAJU,2CAAH,sDAOfC,EAAe,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACiBR,EADjB,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/MoviesSearchList/MovieSearchList.styled.js","components/MoviesSearchList/MoviesSearchList.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return(\n        <Audio\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"green\"\n            ariaLabel=\"loading\"\n            wrapperStyle\n            wrapperClass\n        />\n    )\n}\n","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\ndisplay: grid; \ngrid-template-columns: repeat(3, 1fr); \ngrid-template-rows: repeat(4, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px; \nlist-style: none;\n  \n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {MoviesList} from './MovieSearchList.styled'\n\nconst MoviesSearchList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img\n                    src={\n                      film.poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + film.poster_path\n                        : 'https://via.placeholder.com/960x240'\n                    }\n                    alt=\"About movie\"\n                    width=\"250\"\n                    height=\"400\"\n                  />\n              <p>{film.title}</p>\n            </Link>\n          </li>\n        ))}\n    </MoviesList>\n  );\n};\n\nMoviesSearchList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesSearchList;","import { useState, useEffect } from \"react\";\nimport MoviesSearchList from \"components/MoviesSearchList/MoviesSearchList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport {getTrending} from 'services/api';\n\nconst HomePage = () => {\n    const [films, setFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const FetchTrendingFilms = async () => {\n          setLoading(true);\n          try {\n            const trendingFilms = await getTrending();\n            setFilms(trendingFilms);\n          } catch (error) {\n            console.log(error);\n          } finally {\n            setLoading(false);\n          }\n        };\n        FetchTrendingFilms();\n      }, []);\n    \n    return (\n    <main>\n        <h1>Trending today</h1>\n        {films && <MoviesSearchList films={films} />}\n        {loading && <Loader />}\n    </main>\n    );\n}\nexport default HomePage;","import axios from \"axios\";\n\nconst API_KEY = 'd88f0de56ca3b9f50c6b6c569b5a8f7a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  };\n  \nexport const getSearchMovies = async keyword => {\nconst response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n);\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\nconst response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n);\nreturn response.data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","MoviesList","styled","films","location","useLocation","map","film","to","id","state","from","src","poster_path","alt","title","useState","setFilms","loading","setLoading","useEffect","FetchTrendingFilms","getTrending","trendingFilms","console","log","API_KEY","axios","response","data","results","getSearchMovies","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}